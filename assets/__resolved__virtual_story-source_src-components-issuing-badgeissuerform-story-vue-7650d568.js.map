{"version":3,"file":"__resolved__virtual_story-source_src-components-issuing-badgeissuerform-story-vue-7650d568.js","sources":["../../../../../../../__resolved__virtual:story-source:src-components-issuing-badgeissuerform-story-vue"],"sourcesContent":["export default \"<script setup lang=\\\"ts\\\">\\nimport { ref } from 'vue';\\nimport BadgeIssuerForm from './BadgeIssuerForm.vue';\\nimport { mockBadgeClasses } from '../../services/mockData';\\n\\nconst state = ref({\\n  initialBadgeClass: {},\\n  initialRecipientEmail: '',\\n});\\n\\nconst prefilledState = {\\n  initialBadgeClass: {\\n    ...mockBadgeClasses[0],\\n    name: 'Programming Excellence',\\n    description: 'Awarded for demonstrating exceptional programming skills',\\n    issuer: {\\n      id: 'https://example.org/issuer',\\n      type: 'Profile',\\n      name: 'Rollercoaster.dev',\\n    },\\n  },\\n  initialRecipientEmail: 'recipient@example.org',\\n};\\n\\nconst validationErrorState = {\\n  initialBadgeClass: {\\n    name: '', // Empty name to trigger validation error\\n    description: 'This badge will show validation errors',\\n    issuer: {\\n      id: 'https://example.org/issuer',\\n      type: 'Profile',\\n      name: 'Rollercoaster.dev',\\n    },\\n  },\\n  initialRecipientEmail: 'invalid-email', // Invalid email to trigger validation error\\n};\\n\\nfunction onBadgeIssued(assertion) {\\n  console.log('Badge issued:', assertion);\\n}\\n\\nfunction onReset() {\\n  console.log('Form reset');\\n}\\n</script>\\n\\n<template>\\n  <Story\\n    title=\\\"Components/Issuing/BadgeIssuerForm\\\"\\n    :layout=\\\"{ type: 'single', iframe: true }\\\"\\n  >\\n    <Variant title=\\\"Empty\\\">\\n      <BadgeIssuerForm\\n        :initial-badge-class=\\\"state.initialBadgeClass\\\"\\n        :initial-recipient-email=\\\"state.initialRecipientEmail\\\"\\n        @badge-issued=\\\"onBadgeIssued\\\"\\n        @reset=\\\"onReset\\\"\\n      />\\n    </Variant>\\n\\n    <Variant title=\\\"Prefilled\\\">\\n      <BadgeIssuerForm\\n        :initial-badge-class=\\\"prefilledState.initialBadgeClass\\\"\\n        :initial-recipient-email=\\\"prefilledState.initialRecipientEmail\\\"\\n        @badge-issued=\\\"onBadgeIssued\\\"\\n        @reset=\\\"onReset\\\"\\n      />\\n    </Variant>\\n\\n    <Variant title=\\\"With Validation Errors\\\">\\n      <div class=\\\"story-description\\\">\\n        This story demonstrates the form with validation errors.\\n      </div>\\n      <BadgeIssuerForm\\n        :initial-badge-class=\\\"validationErrorState.initialBadgeClass\\\"\\n        :initial-recipient-email=\\\"validationErrorState.initialRecipientEmail\\\"\\n        @badge-issued=\\\"onBadgeIssued\\\"\\n        @reset=\\\"onReset\\\"\\n      />\\n    </Variant>\\n  </Story>\\n</template>\\n\\n<style>\\n.story-description {\\n  margin-bottom: 1rem;\\n  padding: 0.5rem;\\n  background-color: #f0f0f0;\\n  border-radius: 4px;\\n}\\n</style>\\n\""],"names":[],"mappings":"AAAA,MAAe,8EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;"}