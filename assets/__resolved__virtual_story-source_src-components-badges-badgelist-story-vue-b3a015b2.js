const __resolved__virtual_storySource_srcComponentsBadgesBadgelistStoryVue = '<script setup lang="ts">\nimport { ref } from \'vue\';\nimport BadgeList from \'./BadgeList.vue\';\nimport { mockAssertions } from \'../../services/mockData\';\n\n/**\n * # BadgeList\n *\n * The `BadgeList` component displays a collection of badges with filtering and sorting capabilities.\n * It supports both grid and list layouts, pagination, and loading states.\n *\n * ## Features\n *\n * - Displays a collection of badges in grid or list layout\n * - Supports pagination for large collections\n * - Shows loading state while badges are being fetched\n * - Handles empty state with customizable message\n * - Supports interactive badges that can be clicked\n * - Normalizes badges from different formats (OB2 and OB3)\n * - Includes neurodiversity-focused controls (density, filtering, earned status)\n * - Supports progressive disclosure (expand/collapse)\n *\n * ## Props\n *\n * | Name | Type | Default | Description |\n * |------|------|---------|-------------|\n * | `badges` | `(OB2.Assertion \\| OB3.VerifiableCredential)[]` | Required | Array of badges to display |\n * | `layout` | `\'grid\' \\| \'list\'` | `\'grid\'` | Layout mode for displaying badges |\n * | `interactive` | `boolean` | `true` | Whether badges are clickable |\n * | `loading` | `boolean` | `false` | Whether to show loading state |\n * | `pageSize` | `number` | `9` | Number of badges to display per page |\n * | `currentPage` | `number` | `1` | Current page number |\n * | `showPagination` | `boolean` | `false` | Whether to show pagination controls |\n * | `ariaLabel` | `string` | `\'List of badges\'` | Accessibility label for the badge list |\n * | `density` | `\'compact\' \\| \'normal\' \\| \'spacious\'` | `\'normal\'` | Controls the display density for neurodiversity support |\n * | `filterText` | `string` | `\'\'` | Text to filter badges |\n * | `filterEarned` | `\'all\' \\| \'earned\' \\| \'not-earned\'` | `\'all\'` | Filter badges by earned status |\n *\n * ## Events\n *\n * | Name | Payload | Description |\n * |------|---------|-------------|\n * | `badge-click` | `OB2.Assertion \\| OB3.VerifiableCredential` | Emitted when a badge is clicked |\n * | `page-change` | `number` | Emitted when the current page changes |\n *\n * ## Slots\n *\n * | Name | Props | Description |\n * |------|-------|-------------|\n * | `empty` | None | Content to display when there are no badges |\n * | `badge` | `{ badge, normalized }` | Custom badge rendering |\n *\n * ## Accessibility\n *\n * - The badge list has an appropriate ARIA label\n * - Loading state is announced to screen readers\n * - Empty state is announced to screen readers\n * - Pagination controls are keyboard accessible\n * - Progressive disclosure (expand/collapse) reduces cognitive load\n * - Display density options for sensory needs\n * - Simple, clear filtering for cognitive accessibility\n * - Enhanced keyboard navigation and focus indicators\n */\n\nconst state = ref({\n  badges: mockAssertions,\n  layout: \'grid\',\n  interactive: true,\n  loading: false,\n  pageSize: 9,\n  currentPage: 1,\n  showPagination: false,\n  ariaLabel: \'List of badges\',\n  density: \'normal\',\n  filterText: \'\',\n  filterEarned: \'all\',\n});\n\nfunction onBadgeClick(badge) {\n  console.log(\'Badge clicked:\', badge);\n}\n\nfunction onPageChange(page) {\n  console.log(\'Page changed:\', page);\n  state.value.currentPage = page;\n}\n<\/script>\n\n<template>\n  <Story\n    title="Components/Badges/BadgeList"\n    :layout="{ type: \'single\', iframe: true }"\n  >\n    <template #docs>\n      <div class="histoire-docs">\n        <h1>BadgeList</h1>\n\n        <p>\n          The <code>BadgeList</code> component displays a collection of badges with filtering, neurodiversity-focused controls, progressive disclosure, and display density options. It supports both grid and list layouts, pagination, and loading states.\n        </p>\n\n        <h2>When To Use</h2>\n        <ul>\n          <li>When you need to display multiple badges in a collection</li>\n          <li>When you want to provide pagination for large collections of badges</li>\n          <li>When you need to show a loading state while badges are being fetched</li>\n          <li>When you want to provide different layout options (grid or list)</li>\n          <li>When you want to support neurodiversity-focused features</li>\n        </ul>\n\n        <h2>Examples</h2>\n        <p>Use the controls in the right panel to customize the component behavior.</p>\n\n        <h3>Basic Usage</h3>\n        <pre><code>&lt;BadgeList :badges="myBadges" /&gt;</code></pre>\n\n        <h3>List Layout</h3>\n        <pre><code>&lt;BadgeList :badges="myBadges" layout="list" /&gt;</code></pre>\n\n        <h3>With Pagination</h3>\n        <pre><code>&lt;BadgeList\n  :badges="myBadges"\n  :page-size="10"\n  :current-page="1"\n  :show-pagination="true"\n  @page-change="handlePageChange"\n/&gt;</code></pre>\n\n        <h3>Custom Empty State</h3>\n        <pre><code>&lt;BadgeList :badges="[]"&gt;\n  &lt;template #empty&gt;\n    &lt;p&gt;No badges found. Earn your first badge!&lt;/p&gt;\n  &lt;/template&gt;\n&lt;/BadgeList&gt;</code></pre>\n\n        <h3>With Density and Neurodiversity Controls</h3>\n        <pre><code>&lt;BadgeList\n  :badges="myBadges"\n  density="spacious"\n  :filter-text="filterText"\n  :filter-earned="filterEarned"\n/&gt;</code></pre>\n\n        <h3>Progressive Disclosure (Expand/Collapse)</h3>\n        <p>Click a badge or press Enter to expand/collapse details for reduced cognitive load.</p>\n\n        <h2>Props</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><code>badges</code></td>\n              <td><code>(OB2.Assertion | OB3.VerifiableCredential)[]</code></td>\n              <td>Required</td>\n              <td>Array of badges to display</td>\n            </tr>\n            <tr>\n              <td><code>layout</code></td>\n              <td><code>\'grid\' | \'list\'</code></td>\n              <td><code>\'grid\'</code></td>\n              <td>Layout mode for displaying badges</td>\n            </tr>\n            <tr>\n              <td><code>interactive</code></td>\n              <td><code>boolean</code></td>\n              <td><code>true</code></td>\n              <td>Whether badges are clickable</td>\n            </tr>\n            <tr>\n              <td><code>loading</code></td>\n              <td><code>boolean</code></td>\n              <td><code>false</code></td>\n              <td>Whether to show loading state</td>\n            </tr>\n            <tr>\n              <td><code>pageSize</code></td>\n              <td><code>number</code></td>\n              <td><code>9</code></td>\n              <td>Number of badges to display per page</td>\n            </tr>\n            <tr>\n              <td><code>currentPage</code></td>\n              <td><code>number</code></td>\n              <td><code>1</code></td>\n              <td>Current page number</td>\n            </tr>\n            <tr>\n              <td><code>showPagination</code></td>\n              <td><code>boolean</code></td>\n              <td><code>false</code></td>\n              <td>Whether to show pagination controls</td>\n            </tr>\n            <tr>\n              <td><code>ariaLabel</code></td>\n              <td><code>string</code></td>\n              <td><code>\'List of badges\'</code></td>\n              <td>Accessibility label for the badge list</td>\n            </tr>\n            <tr>\n              <td><code>density</code></td>\n              <td><code>\'compact\' | \'normal\' | \'spacious\'</code></td>\n              <td><code>\'normal\'</code></td>\n              <td>Controls the display density for neurodiversity support</td>\n            </tr>\n            <tr>\n              <td><code>filterText</code></td>\n              <td><code>string</code></td>\n              <td><code>\'\'</code></td>\n              <td>Text to filter badges</td>\n            </tr>\n            <tr>\n              <td><code>filterEarned</code></td>\n              <td><code>\'all\' | \'earned\' | \'not-earned\'</code></td>\n              <td><code>\'all\'</code></td>\n              <td>Filter badges by earned status</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h2>Events</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Payload</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><code>badge-click</code></td>\n              <td><code>OB2.Assertion | OB3.VerifiableCredential</code></td>\n              <td>Emitted when a badge is clicked</td>\n            </tr>\n            <tr>\n              <td><code>page-change</code></td>\n              <td><code>number</code></td>\n              <td>Emitted when the current page changes</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h2>Slots</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Props</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><code>empty</code></td>\n              <td>None</td>\n              <td>Content to display when there are no badges</td>\n            </tr>\n            <tr>\n              <td><code>badge</code></td>\n              <td><code>{ badge, normalized }</code></td>\n              <td>Custom badge rendering</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h2>Accessibility</h2>\n        <p>The component includes several accessibility features:</p>\n        <ul>\n          <li>The badge list has an appropriate ARIA label</li>\n          <li>Loading state is announced to screen readers</li>\n          <li>Empty state is announced to screen readers</li>\n          <li>Pagination controls are keyboard accessible</li>\n          <li>Progressive disclosure (expand/collapse) reduces cognitive load</li>\n          <li>Display density options for sensory needs</li>\n          <li>Simple, clear filtering for cognitive accessibility</li>\n          <li>Enhanced keyboard navigation and focus indicators</li>\n        </ul>\n      </div>\n    </template>\n    <template #controls>\n      <HstSelect\n        v-model="state.layout"\n        title="Layout"\n      >\n        <option value="grid">\n          Grid\n        </option>\n        <option value="list">\n          List\n        </option>\n      </HstSelect>\n      <HstSelect\n        v-model="state.density"\n        title="Density"\n      >\n        <option value="compact">Compact</option>\n        <option value="normal">Normal</option>\n        <option value="spacious">Spacious</option>\n      </HstSelect>\n      <HstText\n        v-model="state.filterText"\n        title="Filter Text"\n      />\n      <HstSelect\n        v-model="state.filterEarned"\n        title="Earned Status"\n      >\n        <option value="all">All</option>\n        <option value="earned">Earned</option>\n        <option value="not-earned">Not Earned</option>\n      </HstSelect>\n      <HstCheckbox\n        v-model="state.interactive"\n        title="Interactive"\n      />\n      <HstCheckbox\n        v-model="state.loading"\n        title="Loading"\n      />\n      <HstCheckbox\n        v-model="state.showPagination"\n        title="Show Pagination"\n      />\n      <HstNumber\n        v-model="state.pageSize"\n        title="Page Size"\n      />\n      <HstNumber\n        v-model="state.currentPage"\n        title="Current Page"\n      />\n      <HstText\n        v-model="state.ariaLabel"\n        title="Aria Label"\n      />\n    </template>\n\n    <Variant title="Grid Layout">\n      <BadgeList\n        :badges="state.badges"\n        layout="grid"\n        :interactive="state.interactive"\n        :loading="state.loading"\n        :page-size="state.pageSize"\n        :current-page="state.currentPage"\n        :show-pagination="state.showPagination"\n        :aria-label="state.ariaLabel"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n\n    <Variant title="List Layout">\n      <BadgeList\n        :badges="state.badges"\n        layout="list"\n        :interactive="state.interactive"\n        :loading="state.loading"\n        :page-size="state.pageSize"\n        :current-page="state.currentPage"\n        :show-pagination="state.showPagination"\n        :aria-label="state.ariaLabel"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n\n    <Variant title="With Pagination">\n      <BadgeList\n        :badges="state.badges"\n        :layout="state.layout"\n        :interactive="state.interactive"\n        :loading="state.loading"\n        :page-size="2"\n        :current-page="state.currentPage"\n        show-pagination\n        :aria-label="state.ariaLabel"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n\n    <Variant title="Loading">\n      <BadgeList\n        :badges="[]"\n        :layout="state.layout"\n        :interactive="state.interactive"\n        loading\n        :page-size="state.pageSize"\n        :current-page="state.currentPage"\n        :show-pagination="state.showPagination"\n        :aria-label="state.ariaLabel"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n\n    <Variant title="Empty">\n      <BadgeList\n        :badges="[]"\n        :layout="state.layout"\n        :interactive="state.interactive"\n        :loading="false"\n        :page-size="state.pageSize"\n        :current-page="state.currentPage"\n        :show-pagination="state.showPagination"\n        :aria-label="state.ariaLabel"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n\n    <Variant title="Grid Layout with Neurodiversity Controls">\n      <BadgeList\n        :badges="state.badges"\n        :layout="state.layout"\n        :interactive="state.interactive"\n        :loading="state.loading"\n        :page-size="state.pageSize"\n        :current-page="state.currentPage"\n        :show-pagination="state.showPagination"\n        :aria-label="state.ariaLabel"\n        :density="state.density"\n        :filter-text="state.filterText"\n        :filter-earned="state.filterEarned"\n        @badge-click="onBadgeClick"\n        @page-change="onPageChange"\n      />\n    </Variant>\n  </Story>\n</template>\n';
export {
  __resolved__virtual_storySource_srcComponentsBadgesBadgelistStoryVue as default
};
//# sourceMappingURL=__resolved__virtual_story-source_src-components-badges-badgelist-story-vue-b3a015b2.js.map
