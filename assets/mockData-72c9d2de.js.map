{"version":3,"file":"mockData-72c9d2de.js","sources":["../../src/utils/type-helpers.ts","../../src/services/mockData.ts"],"sourcesContent":["// src/utils/type-helpers.ts\nimport type { OB2, OB3, Shared } from '@/types';\n\n// Helper function to convert string to IRI branded type\nexport function createIRI(url: string): Shared.IRI {\n  return url as Shared.IRI;\n}\n\n// Helper function to convert string to DateTime branded type\nexport function createDateTime(dateTimeString: string): Shared.DateTime {\n  return dateTimeString as Shared.DateTime;\n}\n\n// Create namespaces to match the guards referenced in BadgeVerificationService.ts\n// These namespaces mirror the guards available in the OB2 and OB3 modules\nexport const OB2Guards = {\n  isIdentityObject: (value: unknown): value is OB2.IdentityObject => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'type' in obj && 'identity' in obj;\n  },\n\n  isVerificationObject: (value: unknown): value is OB2.VerificationObject => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'type' in obj;\n  },\n\n  isEvidence: (value: unknown): value is OB2.Evidence => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    // OB2 Evidence is a flexible object with no strict required props\n    return true;\n  },\n\n  isAlignmentObject: (value: unknown): value is OB2.AlignmentObject => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'targetName' in obj && 'targetUrl' in obj;\n  },\n\n  isImage: (value: unknown): value is OB2.Image => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    // OB2 Image is a flexible object with no strict required props\n    return true;\n  },\n\n  isCriteria: (value: unknown): value is OB2.Criteria => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    // OB2 Criteria is a flexible object with no strict required props\n    return true;\n  },\n};\n\nexport const OB3Guards = {\n  isProof: (value: unknown): value is OB3.Proof => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'type' in obj;\n  },\n\n  isCredentialStatus: (value: unknown): value is OB3.CredentialStatus => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'id' in obj && 'type' in obj;\n  },\n\n  isIssuer: (value: unknown): value is OB3.Issuer => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'id' in obj && 'type' in obj;\n  },\n\n  isCredentialSubject: (value: unknown): value is OB3.CredentialSubject => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'id' in obj || 'achievement' in obj;\n  },\n\n  isAchievement: (value: unknown): value is OB3.Achievement => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'id' in obj && 'type' in obj;\n  },\n\n  isCriteria: (value: unknown): value is OB3.Criteria => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'narrative' in obj || 'id' in obj;\n  },\n\n  isRefreshService: (value: unknown): value is OB3.RefreshService => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'id' in obj && 'type' in obj;\n  },\n\n  isTermsOfUse: (value: unknown): value is OB3.TermsOfUse => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'type' in obj;\n  },\n\n  isEvidence: (value: unknown): value is OB3.Evidence => {\n    if (typeof value !== 'object' || value === null) {return false;}\n    const obj = value as Record<string, unknown>;\n    return 'type' in obj || 'id' in obj;\n  },\n};\n\n// Type guards for runtime type checking\nexport function isOB2Assertion(badge: unknown): badge is OB2.Assertion {\n  if (typeof badge !== 'object' || badge === null) {return false;}\n  const obj = badge as Record<string, unknown>;\n\n  return (\n    'type' in obj &&\n    obj.type === 'Assertion' &&\n    'recipient' in obj &&\n    'badge' in obj &&\n    'verification' in obj &&\n    'issuedOn' in obj\n  );\n}\n\nexport function isOB3VerifiableCredential(badge: unknown): badge is OB3.VerifiableCredential {\n  if (typeof badge !== 'object' || badge === null) {return false;}\n  const obj = badge as Record<string, unknown>;\n\n  return (\n    '@context' in obj &&\n    'type' in obj &&\n    Array.isArray(obj.type) &&\n    obj.type.includes('VerifiableCredential') &&\n    'issuer' in obj &&\n    'issuanceDate' in obj &&\n    'credentialSubject' in obj\n  );\n}\n\n// Export a dummy value to make the module recognized\nexport const __moduleMarker = true;\n","// src/services/mockData.ts\nimport type { OB2, OB3, Shared } from '@/types';\n\n/**\n * Mock data for testing and development\n */\n\n// Mock Issuer\nexport const mockIssuer: OB2.Profile = {\n  '@context': 'https://w3id.org/openbadges/v2',\n  id: 'https://example.org/issuer' as Shared.IRI,\n  type: 'Profile',\n  name: 'Rollercoaster.dev',\n  url: 'https://example.org' as Shared.IRI,\n  email: 'badges@example.org',\n  description: 'An organization dedicated to advancing AI education and certification.',\n  image: {\n    id: 'https://ui-avatars.com/api/?name=Manus+AI&background=0D8ABC&color=fff' as Shared.IRI,\n    type: 'Image',\n  },\n};\n\n// Mock Badge Classes\nexport const mockBadgeClasses: OB2.BadgeClass[] = [\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/badges/1' as Shared.IRI,\n    type: 'BadgeClass',\n    name: 'AI Ethics Fundamentals',\n    description:\n      'Awarded for demonstrating understanding of core AI ethics principles and their application.',\n    image: {\n      id: 'https://ui-avatars.com/api/?name=AI+Ethics&background=2A9D8F&color=fff' as Shared.IRI,\n      type: 'Image',\n    },\n    criteria: {\n      narrative:\n        'Recipients must complete the AI Ethics course and pass the assessment with a score of 80% or higher.',\n    },\n    issuer: mockIssuer,\n    tags: ['ai', 'ethics', 'fundamentals'],\n  },\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/badges/2' as Shared.IRI,\n    type: 'BadgeClass',\n    name: 'Machine Learning Practitioner',\n    description:\n      'Recognizes proficiency in applying machine learning algorithms to solve real-world problems.',\n    image: {\n      id: 'https://ui-avatars.com/api/?name=ML+Pro&background=E9C46A&color=000' as Shared.IRI,\n      type: 'Image',\n    },\n    criteria: {\n      narrative:\n        'Recipients must complete three ML projects demonstrating data preprocessing, model selection, training, evaluation, and deployment.',\n    },\n    issuer: mockIssuer,\n    tags: ['machine learning', 'data science', 'advanced'],\n  },\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/badges/3' as Shared.IRI,\n    type: 'BadgeClass',\n    name: 'Neural Network Architect',\n    description:\n      'Awarded for expertise in designing and implementing neural network architectures.',\n    image: {\n      id: 'https://ui-avatars.com/api/?name=NN+Arch&background=E76F51&color=fff' as Shared.IRI,\n      type: 'Image',\n    },\n    criteria: {\n      narrative:\n        'Recipients must design and implement a custom neural network architecture that achieves state-of-the-art performance on a benchmark task.',\n    },\n    issuer: mockIssuer,\n    tags: ['neural networks', 'deep learning', 'expert'],\n  },\n];\n\n// Mock Assertions (Issued Badges)\nexport const mockAssertions: OB2.Assertion[] = [\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/assertions/1001' as Shared.IRI,\n    type: 'Assertion',\n    recipient: {\n      identity: 'alice@example.org',\n      type: 'email',\n      hashed: false,\n    },\n    badge: mockBadgeClasses[0],\n    issuedOn: '2025-01-15T12:00:00Z' as Shared.DateTime,\n    verification: {\n      type: 'hosted',\n    },\n  },\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/assertions/1002' as Shared.IRI,\n    type: 'Assertion',\n    recipient: {\n      identity: 'bob@example.org',\n      type: 'email',\n      hashed: false,\n    },\n    badge: mockBadgeClasses[1],\n    issuedOn: '2025-02-20T14:30:00Z' as Shared.DateTime,\n    verification: {\n      type: 'hosted',\n    },\n  },\n  {\n    '@context': 'https://w3id.org/openbadges/v2',\n    id: 'https://example.org/assertions/1003' as Shared.IRI,\n    type: 'Assertion',\n    recipient: {\n      identity: 'alice@example.org',\n      type: 'email',\n      hashed: false,\n    },\n    badge: mockBadgeClasses[2],\n    issuedOn: '2025-03-10T09:15:00Z' as Shared.DateTime,\n    verification: {\n      type: 'hosted',\n    },\n  },\n];\n\n// Mock OB3 Achievement\nexport const mockOB3Achievement: OB3.Achievement = {\n  type: ['Achievement'],\n  id: 'https://example.org/achievements/4' as Shared.IRI,\n  name: 'Responsible AI Developer',\n  description:\n    'Awarded for demonstrating expertise in developing AI systems that are ethical, fair, and transparent.',\n  criteria: {\n    narrative:\n      'Recipients must complete the Responsible AI course and implement a project that addresses bias, fairness, and explainability.',\n  },\n  image: {\n    id: 'https://ui-avatars.com/api/?name=Resp+AI&background=264653&color=fff' as Shared.IRI,\n    type: 'Image',\n  },\n};\n\n// Mock OB3 Verifiable Credential\nexport const mockOB3Credential: OB3.VerifiableCredential = {\n  '@context': [\n    'https://www.w3.org/2018/credentials/v1',\n    'https://purl.imsglobal.org/spec/ob/v3p0/context.json',\n  ],\n  id: 'https://example.org/credentials/2001' as Shared.IRI,\n  type: ['VerifiableCredential'],\n  issuer: {\n    id: 'https://example.org/issuers/manus' as Shared.IRI,\n    type: ['Profile'],\n    name: 'Rollercoaster.dev',\n    url: 'https://example.org' as Shared.IRI,\n    image: {\n      id: 'https://ui-avatars.com/api/?name=Manus+AI&background=0D8ABC&color=fff' as Shared.IRI,\n      type: 'Image',\n    },\n  },\n  issuanceDate: '2025-04-01T10:00:00Z' as Shared.DateTime,\n  credentialSubject: {\n    id: 'did:example:ebfeb1f712ebc6f1c276e12ec21' as Shared.IRI,\n    achievement: mockOB3Achievement,\n  },\n};\n\n// Mock Profiles\nexport const mockProfiles: Record<\n  string,\n  {\n    id: string;\n    name: string;\n    image?: string;\n    description?: string;\n    url?: string;\n    email?: string;\n    type: 'Issuer' | 'Recipient';\n    badges: (OB2.Assertion | OB3.VerifiableCredential)[];\n  }\n> = {\n  alice: {\n    id: 'https://example.org/recipients/alice',\n    name: 'Alice Johnson',\n    image: 'https://ui-avatars.com/api/?name=Alice+J&background=553C9A&color=fff',\n    description: 'AI researcher and machine learning enthusiast',\n    email: 'alice@example.org',\n    type: 'Recipient',\n    badges: [mockAssertions[0], mockAssertions[2], mockOB3Credential],\n  },\n  bob: {\n    id: 'https://example.org/recipients/bob',\n    name: 'Bob Smith',\n    image: 'https://ui-avatars.com/api/?name=Bob+S&background=2B6CB0&color=fff',\n    description: 'Data scientist specializing in neural networks',\n    email: 'bob@example.org',\n    type: 'Recipient',\n    badges: [mockAssertions[1]],\n  },\n  manus: {\n    id: 'https://example.org/issuer',\n    name: 'Rollercoaster.dev',\n    image: 'https://ui-avatars.com/api/?name=Manus+AI&background=0D8ABC&color=fff',\n    description: 'An organization dedicated to advancing AI education and certification.',\n    url: 'https://example.org',\n    email: 'badges@example.org',\n    type: 'Issuer',\n    badges: mockAssertions,\n  },\n};\n"],"names":[],"mappings":"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"}